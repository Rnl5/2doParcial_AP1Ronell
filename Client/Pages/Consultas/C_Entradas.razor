@page "/consultaEntradas"

@inject HttpClient httpClient

<div class="container">
    <div class="card">
        <div class="card-header">
            <head>
                <h1>Consulta de Entradas</h1>
            </head>
        </div>

        <div class="card-body">
            <body>
                <a href="/registroEntradas"><button type ="button" class="btn btn-info"><i class="oi oi-plus"> Agregar Nueva Entrada</i></button></a>
                
                <div class="row">
                    <div class ="col">
                        <label>Desde</label>
                        <InputDate @bind-Value="Desde" class ="form-control"></InputDate>
                    </div>

                    <div class="col">
                        <label>Hasta</label>
                        <InputDate @bind-Value = "Hasta"class = "form-control"></InputDate>
                    </div>
                </div>
                    
                <div class = "row">

                    <div class ="col">
                        <label>Campo</label>
                        <InputSelect @bind-Value="opcFiltrado" class="form-select">
                            <option valie="0" disabled selected>Seleccione</option>
                            <option value ="1">Busqueda por ID</option>
                            <option value ="2">Busqueda por Concepto</option>
                            <option value="3">Busqueda por Peso Total</option>
                        </InputSelect>
                    </div>

                    <div class="col">
                        <label>Filtrar:</label>
                        @switch(opcFiltrado)
                        {
                            case 1:
                                <InputNumber class="form-control" @bind-Value="entrada.EntradaId"></InputNumber>
                                Conteo = 0;
                                break;
                            case 2:
                                <InputText class ="form-control" @bind-Value="entrada.Concepto"></InputText>
                                Conteo = 0;
                                break;
                            case 3:
                                <InputNumber class ="form-control" @bind-Value="entrada.PesoTotal"></InputNumber>
                                Conteo = 0;
                                break;
                        }
                    </div>

                        <div class="col">
                           <button type ="button" class="btn btn-outline-primary" @onclick="Buscar"> <i class="oi oi-reload"> Buscar</i></button>
                        </div>
                </div>


                @if (entradas is not null)
                {
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>EntradaId</th>
                                <th>Fecha</th>
                                <th>Concepto</th>
                                <th>Peso Total</th>
                                <th>Cantidad Producida</th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var entrada in entradas)
                            {
                                <tr>
                                    <td>@entrada.EntradaId</td>
                                    <td>@entrada.Fecha.ToString("dd/MM/yyyy")</td>
                                    <td>@entrada.Concepto</td>
                                    <td>@entrada.PesoTotal</td> 
                                    <td>@entrada.CantidadProducida</td>
                                    <td><a href="/registroEntradas/@entrada.EntradaId"><button type ="button" class ="btn btn-outline-primary"><i class="oi oi-eye" ></i> Ver</button></a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </body>
        </div>

        <div class="card-footer">
            <div class="form-row justify-content-sm-between" aria-orientation="vertical">
                <div class="col-3">
                    <label for="CantidadFilas" class="col-form-label"><strong>Num. Filas</strong>&nbsp;</label>
                    <input id="CantidadFilas" @bind-value="@Conteo" disabled class="form-control" />
                </div>
            </div>
        </div>

    </div>
</div>

@code
{
    public List<Entradas> entradas {get; set;} = new List<Entradas>();
    public int Conteo {get; set;}

    public DateTime Desde {get; set;}

    public DateTime Hasta {get; set;}

    public int entradaId {get; set;}

    public int opcFiltrado {get; set;}

    public Entradas entrada {get; set;} = new Entradas();

    protected override async Task OnInitializedAsync()
    {
        Desde.ToString("dd/MM/yyyy");
        Hasta.ToString("dd/MM/yyyy");
        Desde = DateTime.Now.AddMonths(-1);
        Hasta = DateTime.Now;
    }

    public async Task Buscar()
    {
        entradas = await httpClient.GetFromJsonAsync<List<Entradas>>($"api/Entradas");

        if (Desde != default && Hasta != default)
        {
            entradas = entradas.Where(e => e.Fecha >= Desde.Date && e.Fecha <= Hasta).ToList();
        }

        switch(opcFiltrado)
        {
            case 1://ID

            if (Desde != default && Hasta != default)
            {
                entradas = entradas.Where(e => e.Fecha >= Desde.Date && e.Fecha <= Hasta).ToList();
            }
            if (entrada.EntradaId > 0)
            {
                entradas = entradas.Where(e => e.EntradaId == entrada.EntradaId).ToList();
            }

            break;

            case 2://CONCEPTO
            if (Desde != default && Hasta != default)
            {
                entradas = entradas.Where(e => e.Fecha >= Desde.Date && e.Fecha <= Hasta).ToList();
            }

            if(!string.IsNullOrEmpty(entrada.Concepto))
            {
                entradas = entradas.Where(e => e.Concepto.ToLower().Contains(entrada.Concepto.ToLower())).ToList();
            }
            break;

            case 3: //PesoTotal
            if (Desde != default && Hasta != default)
            {
                entradas = entradas.Where(e => e.Fecha >= Desde.Date && e.Fecha <= Hasta).ToList();
            }

            if(entrada.PesoTotal >= 1)
            {
                entradas = entradas.Where(e => e.PesoTotal == entrada.PesoTotal).ToList();
            }


            break;
        }
        Conteo = entradas != null ? entradas.Count : 0;
        StateHasChanged();
    }
}
